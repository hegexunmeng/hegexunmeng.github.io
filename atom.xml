<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hegexunmeng.github.io/</id>
    <title>Gridea</title>
    <updated>2020-06-12T03:17:45.545Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hegexunmeng.github.io/"/>
    <link rel="self" href="https://hegexunmeng.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://hegexunmeng.github.io/images/avatar.png</logo>
    <icon>https://hegexunmeng.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Python3基础 水果销售系统]]></title>
        <id>https://hegexunmeng.github.io/post/python3-ji-chu-shui-guo-xiao-shou-xi-tong/</id>
        <link href="https://hegexunmeng.github.io/post/python3-ji-chu-shui-guo-xiao-shou-xi-tong/">
        </link>
        <updated>2020-06-12T03:14:30.000Z</updated>
        <content type="html"><![CDATA[<!-- sale_system_prepare.py -->
<p>#!/usr/bin/python</p>
<h1 id="-coding-utf-8-">-<em>- coding: utf-8 -</em>-</h1>
<p>import json</p>
<p>def write_json(file_name):<br>
stocklist = {<br>
'苹果': 10,<br>
'香蕉': 10,<br>
'雪梨': 10,<br>
}<br>
with open(file_name, 'w', encoding='utf-8') as ob:<br>
# 解决存入中文乱码ensure_ascii=False<br>
json.dump(stocklist, ob, ensure_ascii=False)</p>
<p>if <strong>name</strong> == '<strong>main</strong>':<br>
file_name = 'stock.json'<br>
write_json(file_name)</p>
<!-- sale system.py -->
<p>#!/usr/bin/python</p>
<h1 id="-coding-utf-8--2">-<em>- coding: utf-8 -</em>-</h1>
<p>import json<br>
from sale_system_prepare import write_json</p>
<h1 id="数据初始化">数据初始化</h1>
<p>file_name = 'stock.json'<br>
write_json(file_name)</p>
<p>print('欢迎来到英俊杂货店')</p>
<h1 id="读取数据">读取数据</h1>
<p>with open(file_name, 'r', encoding='utf-8') as ob:<br>
fruits = json.load(ob)<br>
print(&quot;名称&quot; + &quot;\t&quot; + &quot;数量&quot;)<br>
fruits = dict(fruits)<br>
for k, v in fruits.items():<br>
print(k + '\t' + str(v))</p>
<pre><code>while True:
    # 买的水果种类
    print(&quot;输入‘q'可以退出&quot;)
    fruit_list = []
    for k, v in fruits.items():
        fruit_list.append(k)
    fruit_list = str(fruit_list)
    fruit_name = input('输入要购买的水果，可选择' + fruit_list)
    if fruit_name == 'q':
        print(&quot;欢迎下次再来&quot;)
        break
    # 只有购买的水果名字在清单上时
    elif fruit_name in fruits.keys():
        # 买的数量
        while True:
            fruit_num = input('输入要购买的数量1-10:')
            if fruit_num.isdigit():
                # 输入只有数字
                if int(fruit_num) &lt; 1 or int(fruit_num) &gt; 10:
                    print('请输入数字1-10')
                    continue
                elif 0 &lt; int(fruit_num) &lt;= 10:
                    print(&quot;你已购买&quot; + str(fruit_num) + &quot;个&quot; + fruit_name)
                    # 更新水果数量
                    old_fruit_num = int(fruits[fruit_name])
                    new_fruit_num = old_fruit_num - int(fruit_num)
                    fruits[fruit_name] = new_fruit_num
                    print(fruit_name+&quot;还剩: &quot; + str(new_fruit_num) + ' 个')
                    if new_fruit_num == 0:
                        print(fruit_name + ' 已售罄')
                        # fruits[fruit_name] = '已售罄'
                        del fruits[fruit_name]
                    break
            else:
                # 输入不是纯数字
                if fruit_num == 'q':
                    break
                else:
                    print('请只输入数字')
                    continue
    else:
        print('本店暂时没有叫' + fruit_name + '的水果')
        continue
</code></pre>
<p>print(&quot;本店剩余&quot;)<br>
print(&quot;名称&quot; + &quot;\t&quot; + &quot;数量&quot;)<br>
fruits = dict(fruits)<br>
for k, v in fruits.items():<br>
print(k + '\t' + str(v))</p>
<h1 id="提交数据">提交数据</h1>
<p>with open(file_name, 'w', encoding='utf-8') as ob:<br>
# 解决存入中文乱码ensure_ascii=False<br>
json.dump(fruits, ob, ensure_ascii=False)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020年6月12日07:45:47]]></title>
        <id>https://hegexunmeng.github.io/post/2020-nian-6-yue-12-ri-074547/</id>
        <link href="https://hegexunmeng.github.io/post/2020-nian-6-yue-12-ri-074547/">
        </link>
        <updated>2020-06-11T23:45:38.000Z</updated>
        <content type="html"><![CDATA[<p>开始好好学习😀</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://hegexunmeng.github.io/post/hello-gridea/</id>
        <link href="https://hegexunmeng.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>